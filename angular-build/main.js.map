{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/products-create/products-create.component.html","webpack:///./src/app/products-create/products-create.component.scss","webpack:///./src/app/products-create/products-create.component.ts","webpack:///./src/app/products-detail/products-detail.component.html","webpack:///./src/app/products-detail/products-detail.component.scss","webpack:///./src/app/products-detail/products-detail.component.ts","webpack:///./src/app/products-edit/products-edit.component.html","webpack:///./src/app/products-edit/products-edit.component.scss","webpack:///./src/app/products-edit/products-edit.component.ts","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.scss","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/services/products.service.ts","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.scss","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AngularTokenService } from 'angular-token';\n\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductsDetailComponent } from './products-detail/products-detail.component';\nimport { ProductsCreateComponent } from './products-create/products-create.component';\nimport { ProductsEditComponent } from './products-edit/products-edit.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/products', pathMatch: 'full' },\n\t{ path: 'sign-in', component: SignInComponent },\n  { path: 'products', component: ProductsComponent, canActivate: [AngularTokenService] },\n  { path: 'products/:productId', component: ProductsDetailComponent, canActivate: [AngularTokenService] },\n  { path: 'products-create', component: ProductsCreateComponent, canActivate: [AngularTokenService] },\n  { path: 'products-edit/:productId', component: ProductsEditComponent, canActivate: [AngularTokenService] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <app-header></app-header>\\n  <div class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \".content {\\n  margin-top: 120px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvd29ya3NwYWNlL3BlcnJpLXdlYi9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xuXHRtYXJnaW4tdG9wOiAxMjBweDtcbn0iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'perri-web';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularTokenModule } from 'angular-token';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductsService } from './services/products.service';\nimport { ProductsDetailComponent } from './products-detail/products-detail.component';\nimport { ProductsCreateComponent } from './products-create/products-create.component';\nimport { ProductsEditComponent } from './products-edit/products-edit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SignInComponent,\n    ProductsComponent,\n    ProductsDetailComponent,\n    ProductsCreateComponent,\n    ProductsEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AngularTokenModule.forRoot({\n      apiBase: 'https://perriappbackend.herokuapp.com', // TODO: move to env\n      signInRedirect: 'sign-in' // TODO: move to env\n    })\n  ],\n  providers: [\n    AngularTokenModule,\n    ProductsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<nav class=\\\"navbar fixed-top navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n  \\t<img src=\\\"assets/images/logo.png\\\" height=\\\"70\\\" alt=\\\"\\\">\\n  </a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n    \\t<li class=\\\"nav-item\\\" *ngIf=\\\"tokenService.userSignedIn()\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"\\\" routerLink=\\\"products\\\">\\n          Productos\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"tokenService.userSignedIn()\\\">\\n      \\t<button \\n      \\t\\tclass=\\\"nav-link btn btn-sm btn-outline-danger text-danger my-sm-0\\\"\\n      \\t\\t(click)=\\\"logout()\\\"\\n      \\t\\t>\\n      \\t\\tSalir\\n      \\t</button>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularTokenService } from 'angular-token';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n  \tpublic tokenService: AngularTokenService,\n  \tprivate router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n  \tthis.tokenService.signOut().subscribe(\n\t  res => this.router.navigate(['/sign-in', { }]),\n\t  error => console.error(error)\n\t);\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-10 m-auto\\\">\\n\\t\\t\\t<h2 class=\\\"text-center\\\">Agregar producto</h2>\\n\\t\\t\\t<form [formGroup]=\\\"productForm\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Nombre</label>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tid=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"emailErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa un nombre.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t  <div *ngIf=\\\"name.errors.unique\\\">\\n\\t\\t\\t\\t\\t    Este nombre ya existe.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Imagen</label>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tid=\\\"image\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"image\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"image\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"imageErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"image.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa una imagen.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Descripción</label>\\n\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\tid=\\\"description\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"textarea\\\"\\n\\t\\t\\t\\t\\t\\trows=\\\"7\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"description\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t</textarea>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"descriptionErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa una descripción.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Etapa</label>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tid=\\\"stage\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"stage\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"stage\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"stage.invalid && (stage.dirty || stage.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"stageErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"stage.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa una etapa.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t    <label for=\\\"petTypeId\\\">Tipo de mascota</label>\\n\\t\\t\\t    <select\\n\\t\\t\\t    \\tclass=\\\"form-control\\\"\\n\\t\\t\\t    \\tid=\\\"petTypeId\\\"\\n\\t\\t\\t    \\tname=\\\"petTypeId\\\"\\n\\t\\t\\t    \\tformControlName=\\\"petTypeId\\\"\\n\\t\\t\\t    \\t(change)=\\\"petTypeSelected($event.target.value)\\\"\\n\\t\\t\\t    \\t>\\n\\t\\t\\t    \\t<option value=\\\"0\\\" disabled>Elige un tipo de mascota</option>\\n\\t\\t\\t    \\t<option [value]=\\\"petType.id\\\" *ngFor=\\\"let petType of petTypes\\\">\\n\\t\\t\\t    \\t\\t{{petType.name}}\\n\\t\\t\\t    \\t</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"petTypeId.invalid && (petTypeId.dirty || petTypeId.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"petTypeIdErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"petTypeId.errors.required\\\">\\n\\t\\t\\t\\t\\t    Elige un tipo de mascota.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t  </div>\\n\\t\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t\\t    <label for=\\\"productTypeId\\\">Tipo de producto</label>\\n\\t\\t\\t    <select class=\\\"form-control\\\" *ngIf=\\\"waitingForProductTypes\\\">\\n\\t\\t\\t    \\t<option selected>cargando...</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <select\\n\\t\\t\\t     \\t*ngIf=\\\"!waitingForProductTypes\\\" \\n\\t\\t\\t    \\tclass=\\\"form-control\\\"\\n\\t\\t\\t    \\tid=\\\"productTypeId\\\"\\n\\t\\t\\t    \\tname=\\\"productTypeId\\\"\\n\\t\\t\\t    \\tformControlName=\\\"productTypeId\\\"\\n\\t\\t\\t    \\t>\\n\\t\\t\\t    \\t<option value=\\\"0\\\" disabled>Elige un tipo de producto</option>\\n\\t\\t\\t    \\t<option [value]=\\\"productType.id\\\" *ngFor=\\\"let productType of productTypes\\\">\\n\\t\\t\\t    \\t\\t{{productType.name}}\\n\\t\\t\\t    \\t</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"productTypeId.invalid && (productTypeId.dirty || productTypeId.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"productTypeIdErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"productTypeId.errors.required\\\">\\n\\t\\t\\t\\t\\t    Elige un tipo de producto.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t  </div>\\n\\t\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t\\t    <label for=\\\"brandId\\\">Marca</label>\\n\\t\\t\\t    <select class=\\\"form-control\\\" *ngIf=\\\"waitingForBrands\\\">\\n\\t\\t\\t    \\t<option selected>cargando...</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <select\\n\\t\\t\\t     \\t*ngIf=\\\"!waitingForBrands\\\" \\n\\t\\t\\t    \\tclass=\\\"form-control\\\"\\n\\t\\t\\t    \\tid=\\\"brandId\\\"\\n\\t\\t\\t    \\tname=\\\"brandId\\\"\\n\\t\\t\\t    \\tformControlName=\\\"brandId\\\"\\n\\t\\t\\t    \\t>\\n\\t\\t\\t    \\t<option value=\\\"0\\\" disabled>Elige una marca</option>\\n\\t\\t\\t    \\t<option [value]=\\\"brand.id\\\" *ngFor=\\\"let brand of brands\\\">\\n\\t\\t\\t    \\t\\t{{brand.name}}\\n\\t\\t\\t    \\t</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"brandId.invalid && (brandId.dirty || brandId.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"brandIdErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"brandId.errors.required\\\">\\n\\t\\t\\t\\t\\t    Elige una marca.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t  </div>\\n\\n\\t\\t\\t\\t<div formArrayName=\\\"sizes\\\">\\n\\t\\t\\t\\t\\t<h3>Presentaciones</h3>\\n\\t      \\t<div *ngFor=\\\"let size of sizes.controls; let i=index\\\">\\n\\t          <div [formGroupName]=\\\"i\\\" class=\\\"form-row align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.sku.invalid && (sizes.controls[i].controls.sku.dirty || sizes.controls[i].controls.sku.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"skuErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.sku.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa un sku.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"size\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"size\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"size\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"tamaño\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.size.invalid && (sizes.controls[i].controls.size.dirty || sizes.controls[i].controls.size.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"sizeErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.size.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa un tamaño.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <input\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tid=\\\"inStock\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tclass=\\\"form-check-input\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\ttype=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tname=\\\"inStock\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tformControlName=\\\"inStock\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"form-check-label\\\" for=\\\"inStock\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    En Stock\\n\\t\\t\\t\\t\\t\\t\\t\\t  </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"price\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"price\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"price\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"precio\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.price.invalid && (sizes.controls[i].controls.price.dirty || sizes.controls[i].controls.price.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"priceErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.price.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa un precio.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"tax\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"tax\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"tax\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"IVA (%)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.tax.invalid && (sizes.controls[i].controls.tax.dirty || sizes.controls[i].controls.tax.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"skuErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.tax.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa el porcentaje de IVA.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-1\\\">\\n\\t              <button\\n\\t               \\t(click)=\\\"removeSize(i)\\\"\\n\\t               \\tclass=\\\"btn btn-sm btn-link text-danger\\\"\\n\\t              \\t>\\n\\t              \\tquitar\\n\\t              </button> \\n            \\t</div>\\n\\t          </div>\\n\\t      \\t</div>\\n\\t      \\t<button\\n           \\t(click)=\\\"addSize()\\\"\\n           \\tclass=\\\"btn btn-sm btn-link\\\"\\n          \\t>\\n          \\tagregar presentación\\n\\t        </button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t  <ngb-alert *ngIf=\\\"showErrorMessage\\\" (close)=\\\"showErrorMessage = false\\\">\\n\\t\\t\\t\\t    <strong>¡Error!</strong> {{ errorMessage }}\\n\\t\\t\\t\\t  </ngb-alert>\\n\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t<div class=\\\"form-row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-3 col-3\\\" *ngIf=\\\"waitingForCreateProduct\\\">\\n\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t class=\\\"btn btn-primary\\\"\\n\\t\\t\\t\\t\\t\\t [disabled]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t  >\\n\\t\\t\\t\\t\\t\\t\\t...\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-3 col-3\\\" *ngIf=\\\"!waitingForCreateProduct\\\">\\n\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t type=\\\"submit\\\"\\n\\t\\t\\t\\t\\t\\t class=\\\"btn btn-primary\\\"\\n\\t\\t\\t\\t\\t\\t (click)=\\\"onSubmit()\\\"\\n\\t\\t\\t\\t\\t\\t [disabled]=\\\"!productForm.valid\\\"\\n\\t\\t\\t\\t\\t\\t  >\\n\\t\\t\\t\\t\\t\\t\\tCrear producto\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-3 col-7\\\">\\n\\t\\t\\t\\t\\t\\t<a href=\\\"\\\" routerLink=\\\"/products/\\\" class=\\\"btn btn-link text-secondary\\\">cancelar</a>\\n\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\t\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzLWNyZWF0ZS9wcm9kdWN0cy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { \n\tFormControl,\n\tFormGroup,\n\tValidators,\n\tFormArray,\n\tFormBuilder\n} from '@angular/forms';\nimport { AngularTokenService } from 'angular-token';\nimport { Router } from '@angular/router';\n\nimport { ProductType } from '../models/product-type';\nimport { Brand } from '../models/brand';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-products-create',\n  templateUrl: './products-create.component.html',\n  styleUrls: ['./products-create.component.scss']\n})\nexport class ProductsCreateComponent implements OnInit {\n\tpublic showErrorMessage: boolean = false;\n\tpublic errorMessage: string = '';\n\tpublic waitingForProductTypes: boolean = false;\n\tpublic waitingForBrands: boolean = false;\n\tpublic waitingForCreateProduct: boolean = false;\n\tpublic productForm: FormGroup;\n\t// TODO: get data from api\n\tpublic petTypes = [\n\t\t{ id: 1, name: 'Canino', image: 'https://s3.us-east-2.amazonaws.com/perri-dev/pet-types/perro.png' },\n  \t{ id: 2, name: 'Felino', image: 'https://s3.us-east-2.amazonaws.com/perri-dev/pet-types/gato.png' }\n\t];\n\tpublic productTypes: ProductType[] = [];\n\tpublic brands: Brand[] = []; \n\n  constructor(\n  \tprivate productsService: ProductsService,\n  \tprivate fb: FormBuilder,\n  \tprivate router: Router,\n  ) { }\n\n  // form helpers\n  get name() { return this.productForm.get('name'); }\n\tget image() { return this.productForm.get('image'); }\n\tget description() { return this.productForm.get('description'); }\n\tget stage() { return this.productForm.get('stage'); }\n\tget petTypeId() { return this.productForm.get('petTypeId'); }\n\tget productTypeId() { return this.productForm.get('productTypeId'); }\n\tget brandId() { return this.productForm.get('brandId'); }\n\tget sizes() { return this.productForm.get('sizes') as FormArray; }\n\n\tngOnInit() {\n\t\tthis.getBrands();\t\n\t\tthis.productForm = this.fb.group({\n\t\t\tname: ['', Validators.required],\n\t\t\timage: ['', Validators.required],\n\t\t\tdescription: ['', Validators.required],\n\t\t\tstage: ['', Validators.required],\n\t\t\tpetTypeId: ['0', Validators.required],\n\t\t\tproductTypeId: ['0', Validators.required],\n\t\t\tbrandId: ['0', Validators.required],\n\t\t\tsizes: this.fb.array([\n\t\t\t\tthis.initSizes(),\n\t\t\t])\n\t\t});\n  }\n\n  initSizes() {\n  \treturn this.fb.group({\n  \t\tsku: ['', Validators.required],\n\t\t\tsize: ['', Validators.required],\n\t\t\tprice: ['', Validators.required],\n\t\t\tinStock: [ false ],\n\t\t\ttax: ['', Validators.required]\n  \t})\n  }\n\n  addSize() {\n    const control = <FormArray>this.productForm.get('sizes');\n    control.push(this.initSizes());\n\t}\n\n\tremoveSize(index: number) {\n    const control = <FormArray>this.productForm.get('sizes');\n    control.removeAt(index);\n\t}\n\n\tpetTypeSelected(selectedPetTypeId: number) {\n\t\tthis.updateProductTypes(selectedPetTypeId);\n\t}\n\n\tupdateProductTypes(petTypeId) {\n\t\tthis.waitingForProductTypes = true;\n\t\tlet currentProductType = this.productTypeId.value;\n\t\tthis.productsService.getProductTypes(petTypeId)\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.productTypes = data;\n\t\t\t\tthis.productForm.patchValue({ 'productTypeId': currentProductType });\n\t\t\t\tthis.waitingForProductTypes = false;\n\t\t\t});\n\t}\n\n\tgetBrands() {\n\t\tthis.waitingForBrands = true;\n\t\tthis.productsService.getBrands()\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.brands = data;\n\t\t\t\tthis.waitingForBrands = false;\t\n\t\t\t});\n\t}\n\n\tonSubmit() {\n\t\tthis.waitingForCreateProduct = true;\n\t\tthis.productsService.createProduct(this.productForm.value)\n\t\t\t.subscribe(\n\t\t\t\t(response) => {\n\t\t\t\t\tthis.waitingForCreateProduct = false;\t\n\t\t\t\t\tthis.router.navigate(['/products/' + response.id ]);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthis.showErrorMessage = true;\n\t\t\t\t\tthis.waitingForCreateProduct = false;\n     \t\t\tthis.errorMessage = JSON.stringify(error.error);\n\t\t\t\t});\n\t}\n\n}\n","module.exports = \"<div class=\\\"container mt-5\\\">\\n\\t<div *ngIf=\\\"waitingForProduct\\\" class=\\\"row mt-4\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<p class=\\\"text-center\\\">Cargando producto...</p>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div *ngIf=\\\"!waitingForProduct\\\" class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col text-center\\\">\\n\\t\\t\\t<img src=\\\"{{ product.image }}\\\" height=\\\"350px\\\" class=\\\"img-responsive\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<h1>{{ product.name }}</h1>\\n\\t\\t\\t<p><strong>{{ product.brand }}</strong> · {{ product.pet_type }} {{ product.stage }}</p>\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<span\\n\\t\\t\\t\\t *ngIf=\\\"!product.in_stock\\\"\\n\\t\\t\\t\\t class=\\\"badge badge-danger mx-1\\\"\\n\\t\\t\\t\\t >\\n\\t\\t\\t\\t\\tNo stock\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span\\n\\t\\t\\t\\t *ngIf=\\\"product.in_stock\\\"\\n\\t\\t\\t\\t class=\\\"badge badge-success mx-1\\\"\\n\\t\\t\\t\\t >\\n\\t\\t\\t\\t\\tEn stock\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span class=\\\"badge badge-secondary mx-1\\\">{{ product.product_type }}</span>\\n\\t\\t\\t</p>\\n\\t\\t\\t<p>\\n\\t\\t\\t\\t<a \\n\\t\\t\\t\\t\\thref=\\\"\\\"\\n\\t\\t\\t\\t\\trouterLink=\\\"/products-edit/{{ product.id }}\\\"\\n\\t\\t\\t\\t\\tclass=\\\"text-primary btn btn-link\\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\teditar\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t(click)=\\\"deleteProduct(product)\\\"\\n\\t\\t\\t\\t\\tclass=\\\"btn btn-link text-danger\\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\teliminar\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</p>\\n\\t\\t\\t<p>{{ product.description }}</p>\\n\\t\\t\\t<div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-sm\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\">Tamaño</th>\\n              <th colspan=\\\"1\\\"></th>\\n              <th scope=\\\"col\\\">SKU</th>\\n              <th scope=\\\"col\\\">Precio</th>\\n              <th scope=\\\"col\\\">IVA</th>\\n            </tr>\\n          </thead>\\n\\n          <tbody>\\n            <tr *ngFor=\\\"let product_size of product.product_sizes\\\">\\n              <td>{{ product_size.size }}</td>\\n              <td>\\n                <p *ngIf=\\\"!product_size.in_stock\\\"><span class=\\\"badge badge-danger\\\">No stock</span></p>\\n                <p *ngIf=\\\"product_size.in_stock\\\"><span class=\\\"badge badge-success\\\">En stock</span></p>\\n              </td>\\n              <td>{{ product_size.sku }}</td>\\n              <td>${{ product_size.price | number : '1.0-0' }}</td>\\n              <td>{{ product_size.tax }}%</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <a href=\\\"\\\" routerLink=\\\"/products/\\\" class=\\\"btn btn-link text-secondary\\\">regresar</a>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzLWRldGFpbC9wcm9kdWN0cy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Product } from '../models/product';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-products-detail',\n  templateUrl: './products-detail.component.html',\n  styleUrls: ['./products-detail.component.scss']\n})\nexport class ProductsDetailComponent implements OnInit {\n\tproduct: Product;\n\tproductId: number;\n\twaitingForProduct: boolean = false;\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n  \tthis.productId = Number(this.activatedRoute.snapshot.paramMap.get('productId'));\n  \tthis.getProduct(this.productId);\n  }\n\n  getProduct(productId: number): void {\n  \tthis.waitingForProduct = true;\n    this.productsService.getProduct(productId)\n      .subscribe(product => {\n      \tthis.product = product;\n      \tthis.waitingForProduct = false;\n      });\n  }\n\n  deleteProduct(product: Product): void {\n    if(confirm(\"¿Eliminar \" + product.name + \"?\")) {\n      this.productsService.deleteProduct(product.id)\n        .subscribe(\n        (response) => {\n          this.router.navigate(['/products', { }]);\n        },\n        (error) => {\n        });\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-10 m-auto\\\">\\n\\t\\t\\t<h2 class=\\\"text-center\\\">Actualizar producto</h2>\\n\\t\\t\\t<p\\n\\t\\t\\t\\t*ngIf=\\\"waitingForProduct\\\"\\n\\t\\t\\t\\tclass=\\\"text-center mt-5\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\tCargando producto...\\n\\t\\t\\t</p>\\n\\t\\t\\t\\n\\t\\t\\t<form [formGroup]=\\\"productForm\\\" *ngIf=\\\"!waitingForProduct\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Nombre</label>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tid=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"name\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"emailErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"name.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa un nombre.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t  <div *ngIf=\\\"name.errors.unique\\\">\\n\\t\\t\\t\\t\\t    Este nombre ya existe.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Imagen</label>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tid=\\\"image\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"image\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"image\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"imageErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"image.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa una imagen.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Descripción</label>\\n\\t\\t\\t\\t\\t<textarea\\n\\t\\t\\t\\t\\t\\tid=\\\"description\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"textarea\\\"\\n\\t\\t\\t\\t\\t\\trows=\\\"7\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"description\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t</textarea>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"descriptionErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"description.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa una descripción.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label>Etapa</label>\\n\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\tid=\\\"stage\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\ttype=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"stage\\\"\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"stage\\\"\\n\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"stage.invalid && (stage.dirty || stage.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"stageErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"stage.errors.required\\\">\\n\\t\\t\\t\\t\\t    Ingresa una etapa.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t    <label for=\\\"petTypeId\\\">Tipo de mascota</label>\\n\\t\\t\\t    <select\\n\\t\\t\\t    \\tclass=\\\"form-control\\\"\\n\\t\\t\\t    \\tid=\\\"petTypeId\\\"\\n\\t\\t\\t    \\tname=\\\"petTypeId\\\"\\n\\t\\t\\t    \\tformControlName=\\\"petTypeId\\\"\\n\\t\\t\\t    \\t(change)=\\\"petTypeSelected($event.target.value)\\\"\\n\\t\\t\\t    \\t>\\n\\t\\t\\t    \\t<option value=\\\"0\\\" disabled>Elige un tipo de mascota</option>\\n\\t\\t\\t    \\t<option [value]=\\\"petType.id\\\" *ngFor=\\\"let petType of petTypes\\\">\\n\\t\\t\\t    \\t\\t{{petType.name}}\\n\\t\\t\\t    \\t</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"petTypeId.invalid && (petTypeId.dirty || petTypeId.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"petTypeIdErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"petTypeId.errors.required\\\">\\n\\t\\t\\t\\t\\t    Elige un tipo de mascota.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t  </div>\\n\\t\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t\\t    <label for=\\\"productTypeId\\\">Tipo de producto</label>\\n\\t\\t\\t    <select class=\\\"form-control\\\" *ngIf=\\\"waitingForProductTypes\\\">\\n\\t\\t\\t    \\t<option selected>cargando...</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <select\\n\\t\\t\\t     \\t*ngIf=\\\"!waitingForProductTypes\\\" \\n\\t\\t\\t    \\tclass=\\\"form-control\\\"\\n\\t\\t\\t    \\tid=\\\"productTypeId\\\"\\n\\t\\t\\t    \\tname=\\\"productTypeId\\\"\\n\\t\\t\\t    \\tformControlName=\\\"productTypeId\\\"\\n\\t\\t\\t    \\t>\\n\\t\\t\\t    \\t<option value=\\\"0\\\" disabled>Elige un tipo de producto</option>\\n\\t\\t\\t    \\t<option [value]=\\\"productType.id\\\" *ngFor=\\\"let productType of productTypes\\\">\\n\\t\\t\\t    \\t\\t{{productType.name}}\\n\\t\\t\\t    \\t</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"productTypeId.invalid && (productTypeId.dirty || productTypeId.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"productTypeIdErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"productTypeId.errors.required\\\">\\n\\t\\t\\t\\t\\t    Elige un tipo de producto.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t  </div>\\n\\t\\t\\t  <div class=\\\"form-group\\\">\\n\\t\\t\\t    <label for=\\\"brandId\\\">Marca</label>\\n\\t\\t\\t    <select class=\\\"form-control\\\" *ngIf=\\\"waitingForBrands\\\">\\n\\t\\t\\t    \\t<option selected>cargando...</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <select\\n\\t\\t\\t     \\t*ngIf=\\\"!waitingForBrands\\\" \\n\\t\\t\\t    \\tclass=\\\"form-control\\\"\\n\\t\\t\\t    \\tid=\\\"brandId\\\"\\n\\t\\t\\t    \\tname=\\\"brandId\\\"\\n\\t\\t\\t    \\tformControlName=\\\"brandId\\\"\\n\\t\\t\\t    \\t>\\n\\t\\t\\t    \\t<option value=\\\"0\\\" disabled>Elige una marca</option>\\n\\t\\t\\t    \\t<option [value]=\\\"brand.id\\\" *ngFor=\\\"let brand of brands\\\">\\n\\t\\t\\t    \\t\\t{{brand.name}}\\n\\t\\t\\t    \\t</option>\\n\\t\\t\\t    </select>\\n\\t\\t\\t    <small\\n\\t\\t\\t\\t\\t \\t*ngIf=\\\"brandId.invalid && (brandId.dirty || brandId.touched)\\\"\\n\\t\\t\\t\\t\\t\\tid=\\\"brandIdErrors\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"brandId.errors.required\\\">\\n\\t\\t\\t\\t\\t    Elige una marca.\\n\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t  </div>\\n\\n\\t\\t\\t\\t<div formArrayName=\\\"sizes\\\">\\n\\t\\t\\t\\t\\t<h3>Presentaciones</h3>\\n\\t      \\t<div *ngFor=\\\"let size of sizes.controls; let i=index\\\">\\n\\t          <div\\n\\t          \\t*ngIf=\\\"!sizeToDelete(i)\\\" \\n\\t          \\t[formGroupName]=\\\"i\\\"\\n\\t          \\tclass=\\\"form-row align-items-center\\\"\\n\\t          \\t>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"url\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"sku\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.sku.invalid && (sizes.controls[i].controls.sku.dirty || sizes.controls[i].controls.sku.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"skuErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.sku.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa un sku.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"size\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"size\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"size\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"tamaño\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.size.invalid && (sizes.controls[i].controls.size.dirty || sizes.controls[i].controls.size.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"sizeErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.size.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa un tamaño.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <input\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tid=\\\"inStock\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tclass=\\\"form-check-input\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\ttype=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tname=\\\"inStock\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\tformControlName=\\\"inStock\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t  \\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t  <label class=\\\"form-check-label\\\" for=\\\"inStock\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    En Stock\\n\\t\\t\\t\\t\\t\\t\\t\\t  </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"price\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"price\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"price\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"precio\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.price.invalid && (sizes.controls[i].controls.price.dirty || sizes.controls[i].controls.price.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"priceErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.price.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa un precio.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"tax\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"tax\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"tax\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"IVA (%)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"sizes.controls[i].controls.tax.invalid && (sizes.controls[i].controls.tax.dirty || sizes.controls[i].controls.tax.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"skuErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sizes.controls[i].controls.tax.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    Ingresa el porcentaje de IVA.\\n\\t\\t\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-1\\\">\\n\\t              <button\\n\\t               \\t(click)=\\\"removeSize(i)\\\"\\n\\t               \\tclass=\\\"btn btn-sm btn-link text-danger\\\"\\n\\t              \\t>\\n\\t              \\tquitar\\n\\t              </button> \\n            \\t</div>\\n\\t          </div>\\n\\t      \\t</div>\\n\\t      \\t<button\\n           \\t(click)=\\\"addSize()\\\"\\n           \\tclass=\\\"btn btn-sm btn-link\\\"\\n          \\t>\\n          \\tagregar presentación\\n\\t        </button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t  <ngb-alert *ngIf=\\\"showErrorMessage\\\" (close)=\\\"showErrorMessage = false\\\">\\n\\t\\t\\t\\t    <strong>¡Error!</strong> {{ errorMessage }}\\n\\t\\t\\t\\t  </ngb-alert>\\n\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t<div class=\\\"form-row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-3 col-2\\\" *ngIf=\\\"waitingForUpdateProduct\\\">\\n\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t class=\\\"btn btn-primary\\\"\\n\\t\\t\\t\\t\\t\\t [disabled]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t  >\\n\\t\\t\\t\\t\\t\\t\\t...\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-3 col-2\\\" *ngIf=\\\"!waitingForUpdateProduct\\\">\\n\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t type=\\\"submit\\\"\\n\\t\\t\\t\\t\\t\\t class=\\\"btn btn-primary\\\"\\n\\t\\t\\t\\t\\t\\t (click)=\\\"onSubmit()\\\"\\n\\t\\t\\t\\t\\t\\t [disabled]=\\\"!productForm.valid || productForm.pristine\\\"\\n\\t\\t\\t\\t\\t\\t  >\\n\\t\\t\\t\\t\\t\\t\\tGuardar\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-3 col-8\\\">\\n\\t\\t\\t\\t\\t\\t<a href=\\\"\\\" routerLink=\\\"/products/\\\" class=\\\"btn btn-link text-secondary\\\">cancelar</a>\\n\\t\\t\\t\\t\\t</div>\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\t\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzLWVkaXQvcHJvZHVjdHMtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { \n\tFormControl,\n\tFormGroup,\n\tValidators,\n\tFormArray,\n\tFormBuilder\n} from '@angular/forms';\n\nimport { Product } from '../models/product';\nimport { ProductType } from '../models/product-type';\nimport { Brand } from '../models/brand';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-products-edit',\n  templateUrl: './products-edit.component.html',\n  styleUrls: ['./products-edit.component.scss']\n})\nexport class ProductsEditComponent implements OnInit {\n\tpublic product: any;\n\tprivate productId: number;\n\tpublic waitingForProduct: boolean = false;\n\tpublic showErrorMessage: boolean = false;\n\tpublic errorMessage: string = '';\n\tpublic waitingForProductTypes: boolean = false;\n\tpublic waitingForBrands: boolean = false;\n\tpublic waitingForUpdateProduct: boolean = false;\n\tpublic productForm: FormGroup;\n\t// TODO: get data from api\n\tpublic petTypes = [\n\t\t{ id: 1, name: 'Canino', image: 'https://s3.us-east-2.amazonaws.com/perri-dev/pet-types/perro.png' },\n  \t{ id: 2, name: 'Felino', image: 'https://s3.us-east-2.amazonaws.com/perri-dev/pet-types/gato.png' }\n\t];\n\tpublic productTypes: ProductType[] = [];\n\tpublic brands: Brand[] = [];\n\n  constructor(\n  \tprivate productsService: ProductsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n  ) { }\n\n  // form helpers\n  get name() { return this.productForm.get('name'); }\n\tget image() { return this.productForm.get('image'); }\n\tget description() { return this.productForm.get('description'); }\n\tget stage() { return this.productForm.get('stage'); }\n\tget petTypeId() { return this.productForm.get('petTypeId'); }\n\tget productTypeId() { return this.productForm.get('productTypeId'); }\n\tget brandId() { return this.productForm.get('brandId'); }\n\tget sizes() { return this.productForm.get('sizes') as FormArray; }\n\n  ngOnInit() {\n  \tthis.productId = Number(this.activatedRoute.snapshot.paramMap.get('productId'));\t\n\t\tthis.productForm = this.fb.group({\n\t\t\tid: ['', Validators.required],\n\t\t\tname: ['', Validators.required],\n\t\t\timage: ['', Validators.required],\n\t\t\tdescription: ['', Validators.required],\n\t\t\tstage: ['', Validators.required],\n\t\t\tpetTypeId: ['0', Validators.required],\n\t\t\tproductTypeId: ['0', Validators.required],\n\t\t\tbrandId: ['0', Validators.required],\n\t\t\tsizes: this.fb.array([])\n\t\t});\n\t\tthis.getProductTypes();\n\t\tthis.getBrands();\n\t\tthis.getProduct(this.productId);\n  }\n\n  getProduct(productId: number): void {\n  \tthis.waitingForProduct = true;\n    this.productsService.getProduct(productId)\n      .subscribe(product => {\n      \tthis.product = product;\n      \tthis.setProductForm(this.product);\n      \tthis.waitingForProduct = false;\n      });\n  }\n\n  getBrands() {\n\t\tthis.waitingForBrands = true;\n\t\tthis.productsService.getBrands()\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.brands = data;\n\t\t\t\tthis.waitingForBrands = false;\t\n\t\t\t});\n\t}\n\n\tgetProductTypes() {\n\t\tthis.waitingForProductTypes = true;\n\t\tthis.productsService.getAllProductTypes()\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.productTypes = data;\n\t\t\t\tthis.waitingForProductTypes = false;\n\t\t\t});\n\t}\n\n\tupdateProductTypes(petTypeId) {\n\t\tthis.waitingForProductTypes = true;\n\t\tlet currentProductType = this.productTypeId.value;\n\t\tthis.productsService.getProductTypes(petTypeId)\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.productTypes = data;\n\t\t\t\tthis.productForm.patchValue({ 'productTypeId': currentProductType });\n\t\t\t\tthis.waitingForProductTypes = false;\n\t\t\t});\n\t}\n\n\tsetProductForm(product: any): void {\n\t\tlet productSizes = [];\n\t\tfor(var i=0; i < product.product_sizes.length; i++) {\n\t\t\tproductSizes.push(\n\t\t\t\tthis.fb.group({\n\t\t\t\t\tid: [product.product_sizes[i].id],\n\t\t  \t\tsku: [product.product_sizes[i].sku, Validators.required],\n\t\t\t\t\tsize: [product.product_sizes[i].size, Validators.required],\n\t\t\t\t\tprice: [product.product_sizes[i].price, Validators.required],\n\t\t\t\t\tinStock: [product.product_sizes[i].in_stock],\n\t\t\t\t\ttax: [product.product_sizes[i].tax, Validators.required],\n\t\t\t\t\tdestroy: [ false ]\n\t  \t\t})\n\t\t\t);\n\t\t}\n\t\tlet productObject: any = {\n\t\t\tid: product.id,\n\t\t\tname: product.name,\n\t\t\timage: product.image,\n\t\t\tdescription: product.description,\n\t\t\tstage: product.stage,\n\t\t\tpetTypeId: product.pet_type_id,\n\t\t\tproductTypeId: product.product_type_id,\n\t\t\tbrandId: product.brand_id\n\t\t}\n\t\tthis.productForm.patchValue(productObject);\n\t\tthis.productForm.setControl('sizes', this.fb.array(productSizes));\n\t}\n\n\tpetTypeSelected(selectedPetTypeId: number) {\n\t\tthis.updateProductTypes(selectedPetTypeId);\n\t}\n\n\taddSize() {\n    const control = <FormArray>this.productForm.get('sizes');\n    control.push(\n    \tthis.fb.group({\n\t\t\t\t\tid: [''],\n\t\t  \t\tsku: ['', Validators.required],\n\t\t\t\t\tsize: ['', Validators.required],\n\t\t\t\t\tprice: ['', Validators.required],\n\t\t\t\t\tinStock: [false],\n\t\t\t\t\ttax: ['', Validators.required],\n\t\t\t\t\tdestroy: [ false ]\n\t  \t\t})\n    );\n\t}\n\n\tremoveSize(index: number) {\n    const control = <FormArray>this.productForm.get('sizes');\n    if (control.at(index).get('id').value) {\n    \tcontrol.at(index).patchValue({ destroy: true });\n\t\t} else {\n\t\t\tcontrol.removeAt(index);\t\n\t\t}\n\t\tcontrol.markAsDirty();\n\t}\n\n\tsizeToDelete(index: number) {\n\t\tconst control = <FormArray>this.productForm.get('sizes');\n\t\treturn control.at(index).get('destroy').value;\n\t}\n\n\tonSubmit() {\n\t\tthis.waitingForUpdateProduct = true;\n\t\tthis.productsService.updateProduct(this.productForm.value)\n\t\t\t.subscribe(\n\t\t\t\t(response) => {\n\t\t\t\t\tthis.waitingForUpdateProduct = false;\t\n\t\t\t\t\tthis.router.navigate(['/products/' + response.id ]);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthis.showErrorMessage = true;\n\t\t\t\t\tthis.waitingForUpdateProduct = false;\n     \t\t\tthis.errorMessage = JSON.stringify(error.error);\n\t\t\t\t});\n\t}\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row mt-5\\\">\\n\\t\\t<div class=\\\"col m-auto\\\">\\n\\t\\t\\t<h2 class=\\\"text-center\\\">Productos</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row mt-3\\\">\\n    <div class=\\\"col\\\">\\n      <a href=\\\"\\\" routerLink=\\\"/products-create\\\">agregar producto</a>\\n    </div>\\n\\t</div>\\n\\n\\t<div *ngIf=\\\"waitingForProducts\\\" class=\\\"row mt-4\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<p class=\\\"text-center\\\">Cargando productos...</p>\\n\\t\\t</div>\\n\\t</div>\\n\\n  <div *ngIf=\\\"!waitingForProducts\\\" class=\\\"row mt-4\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-sm\\\">\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th scope=\\\"col\\\">Nombre</th>\\n              <th colspan=\\\"1\\\"></th>\\n              <th scope=\\\"col\\\">Tipo de mascota</th>\\n              <th scope=\\\"col\\\">Tipo de producto</th>\\n              <th scope=\\\"col\\\">Marca</th>\\n              <th colspan=\\\"1\\\"></th>\\n              <th colspan=\\\"1\\\"></th>\\n              <th colspan=\\\"1\\\"></th>\\n            </tr>\\n          </thead>\\n\\n          <tbody>\\n              <tr *ngFor=\\\"let product of products\\\">\\n                <td>{{ product.name }}</td>\\n                <td>\\n                  <p *ngIf=\\\"!product.in_stock\\\"><span class=\\\"badge badge-danger\\\">No stock</span></p>\\n                  <p *ngIf=\\\"product.in_stock\\\"><span class=\\\"badge badge-success\\\">En stock</span></p>\\n                </td>\\n                <td>{{ product.pet_type }}</td>\\n                <td>{{ product.product_type }}</td>\\n                <td>{{ product.brand }}</td>\\n                <td><a href=\\\"\\\" routerLink=\\\"/products/{{ product.id }}\\\">ver</a></td>\\n                <td><a href=\\\"\\\" routerLink=\\\"/products-edit/{{ product.id }}\\\">editar</a></td>\\n                <td><a href=\\\"\\\" routerLink=\\\"\\\" (click)=\\\"deleteProduct(product)\\\"  class=\\\"text-danger\\\">eliminar</a></td>\\n              </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Product } from '../models/product';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\tproducts: Product[];\n\twaitingForProducts: boolean = false;\n\n  constructor(\n    private productsService: ProductsService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  \tthis.getProducts();\n  }\n\n  getProducts(): void {\n  \tthis.waitingForProducts = true;\n    this.productsService.getProducts()\n      .subscribe(products => {\n      \tthis.products = products;\n      \tthis.waitingForProducts = false;\n      });\n  }\n\n  deleteProduct(product: Product): void {\n    if(confirm(\"¿Eliminar \" + product.name + \"?\")) {\n      this.productsService.deleteProduct(product.id)\n        .subscribe( data => {\n          this.products = this.products.filter(p => p !== product);\n        });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AngularTokenService } from 'angular-token';\n\nimport { Product } from '../models/product';\nimport { ProductType } from '../models/product-type';\nimport { Brand } from '../models/brand';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  constructor(\n    private tokenService: AngularTokenService,\n    private http: HttpClient\n  ) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(\n      this.tokenService.tokenOptions.apiBase + '/products/'\n    );\n  }\n\n  getProduct(id: number): Observable<Product> {\n    return this.http.get<Product>(\n      this.tokenService.tokenOptions.apiBase + /products/ + id\n    );\n  }\n\n  deleteProduct(id: number): Observable<any> {\n    return this.http.delete<any>(\n      this.tokenService.tokenOptions.apiBase + '/products/' + id\n    );\n  }\n\n  createProduct(newProduct: any): Observable<any> {\n    let new_product_sizes_attributes = [];\n    for (let i=0; i < newProduct.sizes.length; i++) {\n      new_product_sizes_attributes.push({\n        sku: newProduct.sizes[i].sku,\n        in_stock: newProduct.sizes[i].inStock,\n        price: newProduct.sizes[i].price,\n        size: newProduct.sizes[i].size,\n        tax: newProduct.sizes[i].tax\n      })\n    }\n    let new_product = {\n      name: newProduct.name,\n      image: newProduct.image,\n      description: newProduct.description,\n      stage: newProduct.stage,\n      pet_type_id: newProduct.petTypeId,\n      product_type_id: newProduct.productTypeId,\n      brand_id: newProduct.brandId,\n      product_sizes_attributes: new_product_sizes_attributes\n    }\n    return this.http.post<any>(\n      this.tokenService.tokenOptions.apiBase + /products/,\n      new_product\n    );\n  }\n\n  updateProduct(updatedProduct: any): Observable<any> {\n    let updated_product_sizes_attributes = [];\n    for (let i=0; i < updatedProduct.sizes.length; i++) {\n      updated_product_sizes_attributes.push({\n        id: updatedProduct.sizes[i].id,\n        sku: updatedProduct.sizes[i].sku,\n        in_stock: updatedProduct.sizes[i].inStock,\n        price: updatedProduct.sizes[i].price,\n        size: updatedProduct.sizes[i].size,\n        tax: updatedProduct.sizes[i].tax,\n        _destroy: updatedProduct.sizes[i].destroy\n      })\n    }\n    let updated_product = {\n      id: updatedProduct.id,\n      name: updatedProduct.name,\n      image: updatedProduct.image,\n      description: updatedProduct.description,\n      stage: updatedProduct.stage,\n      pet_type_id: updatedProduct.petTypeId,\n      product_type_id: updatedProduct.productTypeId,\n      brand_id: updatedProduct.brandId,\n      product_sizes_attributes: updated_product_sizes_attributes\n    }\n    return this.http.put<any>(\n      this.tokenService.tokenOptions.apiBase + /products/ + updatedProduct.id,\n      updated_product\n    );\n  }\n\n  getAllProductTypes(): Observable<ProductType[]> {\n    return this.http.get<ProductType[]>(\n      this.tokenService.tokenOptions.apiBase + '/product_types/', {}\n    );\n  }\n\n  getProductTypes(petTypeId: number): Observable<ProductType[]> {\n    return this.http.get<ProductType[]>(\n      this.tokenService.tokenOptions.apiBase + '/product_types/', {\n        params: new HttpParams().set('pet_type_id', String(petTypeId))\n    });\n  }\n\n  getBrands(): Observable<Brand[]> {\n    return this.http.get<ProductType[]>(\n      this.tokenService.tokenOptions.apiBase + '/brands/'\n    );\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-6 m-auto\\\">\\n\\t\\t\\t<div class=\\\"card card-body mt-5\\\">\\n\\t\\t\\t\\t<h2 class=\\\"text-center\\\">Iniciar sesión</h2>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t  <ngb-alert *ngIf=\\\"showErrorMessage\\\" (close)=\\\"showErrorMessage = false\\\">\\n\\t\\t\\t\\t    <strong>¡Error!</strong> {{ errorMessage }}\\n\\t\\t\\t\\t  </ngb-alert>\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t<form [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Correo</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"login\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"login\\\"\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"login\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"login\\\"\\n\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"login.invalid && (login.dirty || login.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"emailErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"login.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t    Ingresa un correo.\\n\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t  <div *ngIf=\\\"login.errors.email\\\">\\n\\t\\t\\t\\t\\t\\t    Ingresa un correo válido.\\n\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>Password</label>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\trequired\\n\\t\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t\\t<small\\n\\t\\t\\t\\t\\t\\t \\t*ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"passwordErrors\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-text text-danger\\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"password.errors.required\\\">\\n\\t\\t\\t\\t\\t\\t    Ingresa una contraseña.\\n\\t\\t\\t\\t\\t\\t  </div>\\n\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t type=\\\"submit\\\"\\n\\t\\t\\t\\t\\t\\t class=\\\"btn btn-primary\\\"\\n\\t\\t\\t\\t\\t\\t [disabled]=\\\"!signInForm.valid\\\"\\n\\t\\t\\t\\t\\t\\t  >\\n\\t\\t\\t\\t\\t\\t\\tIniciar Sesión\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\t\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AngularTokenService } from 'angular-token';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\tshowErrorMessage: boolean = false;\n\terrorMessage: string = '';\n\tsignInForm = new FormGroup({\n\t\tlogin: new FormControl('', [\n\t\t\tValidators.required,\n\t\t\tValidators.email\n\t\t]),\n\t\tpassword: new FormControl('', Validators.required),\n\t});\n\n  constructor(\n  \tprivate tokenService: AngularTokenService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {}\n\n  // form helpers\n  get login() { return this.signInForm.get('login'); }\n\tget password() { return this.signInForm.get('password'); }\n\n  onSubmit() {\n  \tthis.showErrorMessage = false;\n  \tthis.tokenService.signIn(this.signInForm.value).subscribe(\n      res => {\n      \tif (res.body.data.is_admin) {\n          this.router.navigate(['/products', { }]);\n      \t} else {\n      \t\tthis.showErrorMessage = true;\n     \t\t\tthis.errorMessage = \"Acceso no permitido\";\n      \t\tthis.signInForm.reset();\n      \t\tthis.tokenService.signOut();\n      \t}\n      },\n      error => {\n      \tthis.showErrorMessage = true;\n     \t\tthis.errorMessage = error.error.errors.join(', ')\n     \t\tthis.signInForm.reset();\n      }\n    );\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}